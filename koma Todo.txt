Welcome to the (M ver.) Dear Friday to do list.
===========================================
ASSETS
NOTE: draw at desired image dimensions on the tablet (or at some factor) and fill the whole image.
NOTE: draw a skeleton as one layer, then copy it as the base for each drawing.
screen dimensions: 1920x1080
full portrait dimensions: 540x1080 (1x2)
event preview portrait dimensions: 90x90 (1x1)
pdm/playerdungeon portrait dimensions: 500x250/450x225 (2x1) maybe enenacle for design? those are good.
enemy dungeon portrait dimensions: 450x200 (9x4)
move select portrait: 540x1080. reuse full portrait.

use a thick brush, it looks better.
- dungeon scene ui bg for the bottom of the screen box. should be somber, with like, carved angels in it.
- find a custom mouse pointer to use. they're fun.
- new sprites for the new cast. full portrait and box portraits too. use the exact size drawing canvas for the image.
	confirm dimensions before starting. make a template so that everyone is on the same scale.
	- 540x1080 full portraits can be waist up (just check some vns, see what they do.) 
	- 90x90 box portraits can be minimalist. (include an unknown one, with a ?)
	- 250x500 combat portraits should have the face over more on the left side.
- make notifier background image. (should look like a wooden notice board, with thick borders. maybe there's one free online.)
- make event icons; red, blue, and green.
- make proper 173x173 tiles. set ppu to 173x173 for them too.
- compass image for the dungeon. rotate the compass image just like the other sprites. how cool it is.

===========================================
PROGRAMMING
use drag and drop for assigning gear, moves, positions in formation, etc

Okay, okay, but what do we need for the demo/prologue to be released?
(in no particular order)

=====
OGA licenses:
- you are required to follow only one of the licenses. 

===== story dependent stuff

grow up? as if he did.

- visuals:
	finish planning before starting to draw something.
	once the plan is done, then we can start making all the visuals. we will need:
	- overworld background, complete with all the buildings we'll need.
	- dungeon bar background. it needs something, not just the plain gray background. darkest dungeon has something like it i think.
	- full portraits and expressions.
	- combat portraits for party units and for enemy units.
	- scene backgrounds.
	- scene images.
	- unique tile images for dungeon tiles.
	- event icons. make them flags that stick out of the buildings or something.
	- event preview portraits

- figure out what drawings are needed:
	- do this once all events are written and all mobs are created.)

===== end story dependent stuff

the combat system is fine. 
=====
- the overworld bgs should have some animation. (even just weather, like rain or wind.)
- Note: specific events in character chains may also be locked to the world's part level. 
	(- No chains are available in the prologue.)

- when going into a dungeon, even though only certain party members are fighting, we still act like
	  all (recruited) party members are there in events and stuff. Otherwise, it's just too much work.

- dungeon design: (to keep in mind)
	- mob parties must absolutely not start on a home tile. 
	- note: you can make a multi-wave bossfight by placing multiple 0-movement mob parties on the same tile. 
		- (make the extra's have a blank name and order the parties correctly so they are fought in the order you want.)
	- be careful to make it so the player never becomes stuck in a dungeon. they must always be able to withdraw.
	- mandatory dungeons, once cleared, you can never go back in. they're roadblocks.
	- optional dungeons, you don't even 'clear' them. they have no clear tile.
		- you can go in them as many times as you want, until the dungeon becomes unavailable, usually at an act change.
		- if doing something in an optional dungeon is necessary for a sidequest or something (like a recruitment quest or a monster slaying quest)
		  then triggering an event will mark something in history that the event back in overworld checks.

- writing:
	- on mainmenu screen; read player ic and name from a textfile in the saves folder.
		- if textfile not found, then create it with default values.
	- create prologue skeleton
	- write events... bit by bit.
==== 	

- plan out story (for real this time.) and write the whole damn thing.
	- i don't want to waste time making units and mobs and dungeons that won't even show up.

- aim new targeting types: 
	- closest to breaking. targets the player unit with the highest break. simple.
	- player scheduled unit. (if none, then goes random.)
	- unit with ap left. (randomly picks between all player units with ap > 0)

- dungeon + SM:
	- play footsteps sound through SM. (need to test it. played in a new tile, stopped in slide listener.)
	- if it's an unexplored tile:
		- restore a little (5%?) of each party unit's hp.

- dungeon 0:
	- plan out grid, mobs, boss monsters, event tiles, etc.

- design party and dungeon0 units:
	- especially with the break system, enemies should hit hard.
	enemy stats should be comparable to player. we don't want to just shrug off damage. you have to plan where to deposit it.
	an enemy's basic move should deal about 30-40 damage to our crew at start. 2 hits break mc/nat. 2.5 breaks tori. 3 breaks friday.
	- mobs? various Sabaind. (designs are still in the sheet, at least)
	- party? Mc, Friday, Nat, and Tori. 
		- rescale design sheet stats. (hp mostly, but some atk for mobs.)
		- finally, remember that we're using an mp system too. numbers should be low, though.

- make party and dungeon0 units:
	- party. (Mc, friday, nat, tori)
	- mobs. (pending...)

- exp:
	- now that monsters actually have exp, is it being carried back properly?

- filling out dungeon hover:
	- title, current threat
	- symbol if: mandatory and not yet cleared.
	- symbol if optional and not yet cleared.
	- symbol if entered before.

- main menu: (no need to worry about loading, dude. we're not going to implement that.)
	Just make a fresh scene for mainmenu.
		- start: scenemanager.load("overworld scene")
		- load (not interactable for now)
		- gallery (same scene as main menu. you click to load an event, which plays right there. post demo.)
		- exit: Application.Quit()

- when we include assets (at the end):
	- moves sounds, music, sound effects, etc.
	remember to credit.
	OGA faq: https://opengameart.org/content/faq#q-ccgplcompat
	"What do the licenses mean"

- ui pack:
	- got one bookmarked from oga with a ton of things. try using it to make the ui look good.
		- dungeon ui needs to be resized too.
	- change the move preview menu too. (those three buttons, you know.)
	- a mouse cursor. just something stylized.

- dungeon heal button:
	- consider what the healperstam percentage should be at default and at max.
		- starting at 5. Range could be 5, 10, 15, 20, 25?
	- something else to consider:
		- have the main heal button to heal everyone, but add secondary heal buttons on the boxes of each
		  unit. that way you could heal only the units you desire, individually.

- sound manager:
	- sound effect for passing time. should be ~4 seconds long. doo doo doo doooooo ... doooo
	- footsteps sound: no good, it's too slow and is only 1 tap.
		- find a sound with multiple steps, 1 second long (or just over)

- help sheet:
	Do last because things may change.
	- overworld, combat, and dungeon help sheets: displayed at first time of each. they are images. 
		- the help button can be pressed to show the help image at any time, depending on the scene.
	overworld tutorial:
	- explains colors/types of events.
		- red: story event; complete to continue
		- blue: day event; missable. you'll see these once only.
		- green: char event; available throughout entire game as long as character is present.
	- explain what ev preview means (char box, location, event title, haich)
	- explain what dungeon preview means (threat, exploration %, wanted monsters present)
	combat tutorial:
	- explain scheduling system. (instant, next turn, eor.) explain a killed unit cannot execute.
	- explain break system. (when a unit takes >= half their max hp in a single blow, they are broken. they lose all their ap and scheduled moves are cancelled.)
	- explain move row preference (front/back/ambi. wrong rows do 0nly 0.65x dmg) 
	- explain defender bonus (units in back row take only 0.75x dmg.)
	- explain turns. go back and forth until both sides have exhausted all unit's ap.
	- explain affinity. take note of the image representation, but exact multipliers are also available when targeting moves.
	- beware that moves may have strange effects
	- and that's all... you'll learn the rest by doing.
	dungeon help sheet:
	- explain stamina system (the tile cost is in red.)
	- explain that when entering an unexplored tile, all party units regain a bit of hp and mp.
	- explain about use_tile button. you can use it on any tile that has a sparkling effect on it, a little yellow thing.
		- remember you can only use each tile once.
	- you can drag the screen to move camera and hit recenter button to bring it back. also, scroll wheel zooms.
	- withdraw button: (note, clear tiles and home with exit tiles will be different visually)
		- you can withdraw from any tile with the door icon. 
		- but note that mandatory dungeons require you to clear them to progress the story.
			- a dungeon is only cleared when you withdraw through a cleartile. (show it)	
	- losing combat:
		- you can retry at no penalty as many times as you'd like. 
		- if you feel the battle is unwinnable, then you should hit the withdraw option instead. 

===== Post Demo

- character events:
	- make sure they have field where they have a minimum part reached for each event.
	(or you could just store it in a parallel int array. whatever's easiest)

- mob parties:
	- if a mob party has a loss event, then add a visual indicator to their flag icon. the haich heart works.

- dungeon withdrawal:
	- penalty for withdrawing on a loss: you only bring 50% loot and exp with you or something.
	needs a change because right now 'withdraw' and 'loss' are the same.

- combat:
	- surrender button. instantly loses the battle.

- interesting moves:
	- for a character like sincy, some of her drain moves do more dmg against males. this would require adding a gender enum to all units. (which is fine.)

- dungeon unit box:
	(future -- post demo at least)
	- unit ui layout:
		- aff and name: unchanged.
		- ap text: top left, just below aff and name.
		- hpbar along bottom left (include letters overtop)
		- mpbar below hpbar (include letters overtop)

- unit trees:
	these let you customize and level up each unit. can: increase level, exchange moves, and do gear(?).
	MOVE TREE
	the unit's name is in the center of the screen and each of their starting moves goes in a direction. four move paths by default.
	- to learn a move, you must click it, then click learn move. 
		- when you highlight a move its info will be filled out.
		- when you click a move, its info will be locked and the learn button is enabled (if you pass requirements).
		- you must have gold and exp fee.
		- you must have learned ALL of the move's predecessors. a move can have many.
		- you must be the required level to learn the move. moves have a minimum learn level.
	- when showing a move:
		- use lines to show move predecessors
		- learned moves have solid boxes, learnables have dotted boxes. unlearnables have no boxes.
			- the predecessor lines follow the same pattern.
	I suppse that, because of predecessors, etc, each unit must have their own version of the tree.	
	CLICKED MOVE
	the move's preview area. 
		- has a locked version (shown on moveslot unhover, locked on click) 
		- has a LEARN button for learneable moves when they are clicked. also displays the exp cost and gold cost to learn the move.
	UNIT PART
	the unit's preview area. you can see the name, aff, and stat block.
		- near it, there's the level up button. it shows the cost in exp.
		- press the button to level up the unit. leveling up the unit shows a popup of how the unit improved itself.
	when level up button is pressed (only enabled if you can afford it):
		- increase level by 1.
		- increase each stat by a value taken from a very small range.
			- a unit at the same level across games will always have very similar stats, but not identical.
	MOVE SLOTS
	at the bottom, the unit's 5 move slots are filled out.
		- the player can drag a learned move from the tree into one of the move slots to equip moves.
		- when trying to equip, check to make sure the move (using id) is not already equipped.
	MECHANICS
	so these are the decisions the player makes: level up or moves -> if moves, then which move.
	offsets: if early moves are cheaper, then the player will just buy them up.
		possible countermeasures:
		- every time the player learns a move, the cost of learning every other move goes up by 5%?
		- the cost of learning a move is increased by the player's level?


- saving and loading: (not in demo)
	keep it simple.
	- party members' states.(stats, equipped moves, and unlocked reserve moves.) 
	- unspent exp or items
	- history. (a record of the significant choices the player has made during the game)
	- day (which lets us pick ourselves back up in a load very easily)

- cart:
	- it strikes me that, just like for party units, we could create a prefab for the cart
	  and then just make changes to that prefab, which would be saved given the nature of a prefab.
	  Seems like a much cleaner way to carry data between scenes.

- more status to add:
	- make a unit's dmg spread get the highest/lowest possible roll. (2 stances)

- guild store:
	run by moth. each time you enter in a part, it displays a unique part text on the left with moth's character icon.
		e.g. "remember to report fences, black markets, or any other illegal transactions that violate the guild's exclusive commercial rights in Cherespoir. :)"
	- on the right two thirds is the list of things to buy and the buy a thing button in two columns.
	  things can only be bought once OR can be bought a certain number of times.
	can buy:
	- dungeon license - NAME | allows the player to enter a new dungeon, NAME. 
	- healing license - I to X? | improves stamina to hp healing percent in dungeon heal button. starts at I = 1%, ends at X = 10%.
	- stamina license - I to X? | same as healing license, but for unit's stamina.
	- explorer's pamphlet - TYPE | makes tiles of TYPE (e.g. font of health) start visible in a dungeon. not all tile types, of course.
	- logistics I to X | can buy multiple times for increasing price. increases base stamina by a small number. 2? 3? 5?
	- dogtags I to X? | increases the threat floor of all dungeons. (meaning the dungeon's threat never goes below a certain number)
	- special contract - EXP | for the next dungeon, receive no gold, but double exp. locks special contract Gold.
	- special contract - GOLD | for the next dungeon, receive no exp, but double gold. locks special contract exp.

- guild hall:
	run by tori. each time you enter in a part, displays unique part text, etc, etc same as guild store.
		e.g. "The guild waives all responsibility for loss of limb or life."
	interface is the same layout as guild store, but products are different.
	it's more like a bounty thing. you do things playing and you may be eligible for a reward.
	- maintains a list of wanted monsters, with name and location(what dungeon they're in). kill it and then click redeem button to obtain the reward.
	- maintains a list of optional dungeons and your exploration % in them. bring exploration to 100% to receive a reward.

end

